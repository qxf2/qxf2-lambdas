name: url-filtering-lambda-rohini
on:
  push:
    branches: [master, '*-sprint-*']
    paths:
      - 'url_filtering_lambda_rohini/**'
      - '.github/workflows/url_filtering_lambda_rohini.yml'
jobs:

  deply-staging:
    name: Deploy to staging
    if: contains(github.event.ref, '-sprint-')
    environment:
      name: staging-url-filter
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Deploy code to Lambda
      uses: qxf2/py-lambda-action@v1.0.2
      with:
        lambda_directory: 'url_filtering_lambda_rohini'
        lambda_function_name: ${{secrets.ARN }}
        lambda_layer_arn: ${{ secrets.LAYER_ARN }}
        requirements_txt: 'url_filtering_lambda_rohini/requirements.txt'
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.REGION }}

  deploy-production:
    runs-on: ubuntu-latest
    if: github.event.ref == 'refs/heads/master'
    steps:
    - uses: actions/checkout@master
    - name: Deploy code to Lambda
      uses: qxf2/py-lambda-action@v1.0.2
      with:
        lambda_directory: 'url_filtering_lambda_rohini'
        lambda_function_name: 'arn:aws:lambda:ap-south-1:285993504765:function:URLFilteringLambdaRohini'
        lambda_layer_arn: 'arn:aws:lambda:ap-south-1:285993504765:layer:rohinilayer'
        requirements_txt: 'url_filtering_lambda_rohini/requirements.txt'
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.SKYPE_SENDER_REGION }}
